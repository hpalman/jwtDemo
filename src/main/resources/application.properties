spring.application.name=jwtDemo
#
#
spring.datasource.url=jdbc:mysql://172.20.30.202:3306/hr?createDatabaseIfNotExist=true
spring.datasource.username = hr
spring.datasource.password = hr
#spring.datasource.diver-class-name =com.mysql.cj.jdbc.Driver


# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# create, create-drop , update
spring.jpa.hibernate.ddl-auto = update

# JPA가 실행하는 SQL 쿼리 로그 활성화
#spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.show_sql=true
# Hibernate가 실행하는 SQL 쿼리 포맷팅
spring.jpa.properties.hibernate.format_sql=true

# SQL 쿼리와 함께 바인딩된 파라미터를 로그에 표시
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Hibernate 관련 디버깅 로그 활성화
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
#
#
#
#            %d{dd-MM-yyyy HH:mm:ss.SSS} %highlight(%-5level) [%blue(%t)] %yellow(%logger{45}) : %msg%n%throwable
#            %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx
logging.pattern.console = %d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) [%thread] [%-64class:%-24method:%-4line] - %msg %n
#%logger{36}
#[%d{yyyy-MM-dd HH:mm:ss}:%-3relative]  %clr(%-5level) %clr(${PID:-}){magenta} %clr(---){faint} %clr([%15.15thread]){faint} %clr(%-40.40logger{36}){cyan} %clr(:){faint} %msg%n"
#
logging.level.root=DEBUG